{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"SharedReaderKey.Default"},{"text":".","type":"text"}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/composablearchitecture\/appstoragekeypathkey\/default"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Type Alias","role":"symbol","extendedModule":"Sharing","symbolKind":"typealias","modules":[{"name":"ComposableArchitecture","relatedModules":["Sharing"]}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Default","kind":"identifier"}],"navigatorTitle":[{"text":"Default","kind":"identifier"}],"externalID":"s:7Sharing15SharedReaderKeyPAAE7Defaulta::SYNTHESIZED::s:22ComposableArchitecture017AppStorageKeyPathE0V","title":"AppStorageKeyPathKey.Default"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/Default"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Default"},{"kind":"text","text":" = "},{"text":"_SharedKeyDefault","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/SharedReaderKey-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey/SharedReaderKey-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/SharedReaderKey-Implementations","abstract":[],"title":"SharedReaderKey Implementations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/appstoragekeypathkey\/sharedreaderkey-implementations","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"deprecated":true,"kind":"symbol","type":"topic","title":"AppStorageKeyPathKey","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AppStorageKeyPathKey","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AppStorageKeyPathKey"}],"abstract":[{"text":"A type defining a user defaults persistence strategy via key path.","type":"text"}],"url":"\/documentation\/composablearchitecture\/appstoragekeypathkey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey/Default":{"role":"symbol","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Default"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/Default","abstract":[],"url":"\/documentation\/composablearchitecture\/appstoragekeypathkey\/default","title":"AppStorageKeyPathKey.Default","navigatorTitle":[{"text":"Default","kind":"identifier"}]}}}