{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init()"},"kind":"symbol","sections":[],"metadata":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"roleHeading":"Initializer","externalID":"s:22ComposableArchitecture14BindingReducerVACyxq_q_Gyc5StateQy_RszAA14BindableActionR_q0_Rs_rlufc","modules":[{"name":"ComposableArchitecture"}],"symbolKind":"init","title":"init()"},"abstract":[{"text":"Initializes a reducer that updates bindable state when it receives binding actions.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"() ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"Action","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14BindableActionP5StateQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:22ComposableArchitecture14BindableActionP","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","kind":"typeIdentifier","text":"BindableAction"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"}],"languages":["swift"]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/composablearchitecture\/bindingreducer\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer":{"type":"topic","kind":"symbol","navigatorTitle":[{"text":"BindingReducer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindingReducer"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer","abstract":[{"type":"text","text":"A reducer that updates bindable state when it receives binding actions."}],"url":"\/documentation\/composablearchitecture\/bindingreducer","title":"BindingReducer","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction":{"role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"BindableAction","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction","abstract":[{"text":"An action type that exposes a ","type":"text"},{"type":"codeVoice","code":"binding"},{"type":"text","text":" case that holds a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","type":"reference","isActive":true},{"text":".","type":"text"}],"url":"\/documentation\/composablearchitecture\/bindableaction","title":"BindableAction","navigatorTitle":[{"kind":"identifier","text":"BindableAction"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","type":"topic","title":"Effect","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingReducer/init()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingReducer\/init()","url":"\/documentation\/composablearchitecture\/bindingreducer\/init()","role":"symbol","type":"topic","title":"init()","abstract":[{"text":"Initializes a reducer that updates bindable state when it receives binding actions.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","title":"BindingAction","url":"\/documentation\/composablearchitecture\/bindingaction","navigatorTitle":[{"text":"BindingAction","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingAction","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"text":"An action that describes simple mutations to some root state at a writable key path.","type":"text"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindableAction/State":{"role":"symbol","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"State","kind":"identifier"}],"kind":"symbol","required":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindableAction\/State","abstract":[{"type":"text","text":"The root state type that contains bindable fields."}],"url":"\/documentation\/composablearchitecture\/bindableaction\/state","title":"State"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","role":"collectionGroup","kind":"article"}}}