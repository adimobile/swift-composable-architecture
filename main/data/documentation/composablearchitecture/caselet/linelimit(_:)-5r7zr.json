{"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/linelimit(_:)-5r7zr"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/lineLimit(_:)-5r7zr"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"nonisolated"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lineLimit"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"limit","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","text":"ClosedRange"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"metadata":{"symbolKind":"method","title":"lineLimit(_:)","platforms":[{"beta":false,"introducedAt":"16.0","unavailable":false,"deprecated":false,"name":"iOS"},{"unavailable":false,"beta":false,"name":"macOS","introducedAt":"13.0","deprecated":false},{"introducedAt":"16.0","name":"tvOS","beta":false,"unavailable":false,"deprecated":false},{"unavailable":false,"deprecated":false,"beta":false,"introducedAt":"9.0","name":"watchOS"}],"extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewPAAE9lineLimityQrSNySiGF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lineLimit"},{"kind":"text","text":"("},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"roleHeading":"Instance Method","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"role":"symbol"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.lineLimit(_:)"},{"type":"text","text":"."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"kind":"article","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","title":"View Implementations","abstract":[],"type":"topic","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","title":"SwitchStore","kind":"symbol","deprecated":true,"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"url":"\/documentation\/composablearchitecture\/caselet","role":"symbol","title":"CaseLet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/lineLimit(_:)-5r7zr":{"type":"topic","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lineLimit"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","text":"ClosedRange"},{"kind":"text","text":"<"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/lineLimit(_:)-5r7zr","url":"\/documentation\/composablearchitecture\/caselet\/linelimit(_:)-5r7zr","role":"symbol","kind":"symbol","title":"lineLimit(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup"}}}