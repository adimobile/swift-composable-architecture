{"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.matchedTransitionSource(id:in:configuration:)","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/matchedTransitionSource(id:in:configuration:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"matchedTransitionSource","kind":"identifier"},{"kind":"text","text":"("},{"text":"id","kind":"externalParam"},{"text":": some ","kind":"text"},{"preciseIdentifier":"s:SH","kind":"typeIdentifier","text":"Hashable"},{"kind":"text","text":", "},{"kind":"externalParam","text":"in"},{"kind":"text","text":" "},{"kind":"internalParam","text":"namespace"},{"kind":"text","text":": "},{"text":"Namespace","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9NamespaceV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7SwiftUI9NamespaceV2IDV","kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI41EmptyMatchedTransitionSourceConfigurationV","text":"EmptyMatchedTransitionSourceConfiguration"},{"kind":"text","text":") -> some "},{"text":"MatchedTransitionSourceConfiguration","preciseIdentifier":"s:7SwiftUI36MatchedTransitionSourceConfigurationP","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/matchedtransitionsource(id:in:configuration:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:7SwiftUI4ViewPAAE23matchedTransitionSource2id2in13configurationQrqd___AA9NamespaceV2IDVqd_0_AA012EmptyMatchedeF13ConfigurationVXEtSHRd__AA0mefN0Rd_0_r0_lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","title":"matchedTransitionSource(id:in:configuration:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"matchedTransitionSource","kind":"identifier"},{"kind":"text","text":"("},{"text":"id","kind":"externalParam"},{"text":": some ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI9NamespaceV","kind":"typeIdentifier","text":"Namespace"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9NamespaceV2IDV","text":"ID"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"configuration"},{"text":": (","kind":"text"},{"text":"EmptyMatchedTransitionSourceConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI41EmptyMatchedTransitionSourceConfigurationV"},{"kind":"text","text":") -> some "},{"preciseIdentifier":"s:7SwiftUI36MatchedTransitionSourceConfigurationP","kind":"typeIdentifier","text":"MatchedTransitionSourceConfiguration"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"role":"symbol","platforms":[{"deprecated":false,"beta":false,"introducedAt":"18.0","name":"iOS","unavailable":false},{"deprecated":false,"unavailable":false,"introducedAt":"15.0","name":"macOS","beta":false},{"beta":false,"name":"tvOS","introducedAt":"18.0","unavailable":false,"deprecated":false},{"introducedAt":"2.0","name":"visionOS","unavailable":false,"beta":false,"deprecated":false},{"introducedAt":"11.0","deprecated":false,"unavailable":false,"name":"watchOS","beta":false}],"symbolKind":"method","roleHeading":"Instance Method","extendedModule":"SwiftUICore","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"url":"\/documentation\/composablearchitecture\/caselet","role":"symbol","title":"CaseLet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","title":"SwitchStore","kind":"symbol","deprecated":true,"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/matchedTransitionSource(id:in:configuration:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"matchedTransitionSource","kind":"identifier"},{"kind":"text","text":"("},{"text":"id","kind":"externalParam"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:SH","kind":"typeIdentifier","text":"Hashable"},{"text":", ","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Namespace","preciseIdentifier":"s:7SwiftUI9NamespaceV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:7SwiftUI9NamespaceV2IDV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:7SwiftUI41EmptyMatchedTransitionSourceConfigurationV","kind":"typeIdentifier","text":"EmptyMatchedTransitionSourceConfiguration"},{"text":") -> some ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI36MatchedTransitionSourceConfigurationP","text":"MatchedTransitionSourceConfiguration","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/caselet\/matchedtransitionsource(id:in:configuration:)","role":"symbol","title":"matchedTransitionSource(id:in:configuration:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/matchedTransitionSource(id:in:configuration:)","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"kind":"article","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","title":"View Implementations","abstract":[],"type":"topic","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","role":"collectionGroup","kind":"article"}}}