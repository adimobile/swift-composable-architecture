{"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/onscrollphasechange(_:)-k13h"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onScrollPhaseChange","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11ScrollPhaseO","text":"ScrollPhase"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI11ScrollPhaseO","kind":"typeIdentifier","text":"ScrollPhase"},{"text":", ","kind":"text"},{"text":"ScrollPhaseChangeContext","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI24ScrollPhaseChangeContextV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":"\n"}]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/onScrollPhaseChange(_:)-k13h","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"platforms":[{"deprecated":false,"name":"iOS","beta":false,"introducedAt":"18.0","unavailable":false},{"introducedAt":"15.0","name":"macOS","unavailable":false,"beta":false,"deprecated":false},{"introducedAt":"18.0","unavailable":false,"name":"tvOS","beta":false,"deprecated":false},{"beta":false,"name":"visionOS","unavailable":false,"introducedAt":"2.0","deprecated":false},{"deprecated":false,"name":"watchOS","unavailable":false,"introducedAt":"11.0","beta":false}],"modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"extendedModule":"SwiftUICore","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","title":"onScrollPhaseChange(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onScrollPhaseChange","kind":"identifier"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:7SwiftUI11ScrollPhaseO","text":"ScrollPhase","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11ScrollPhaseO","text":"ScrollPhase"},{"kind":"text","text":", "},{"text":"ScrollPhaseChangeContext","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI24ScrollPhaseChangeContextV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"externalID":"s:7SwiftUI4ViewPAAE19onScrollPhaseChangeyQryAA0eF0O_AfA0efG7ContextVtcF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.onScrollPhaseChange(_:)"},{"text":".","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","title":"SwitchStore","kind":"symbol","deprecated":true,"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/onScrollPhaseChange(_:)-k13h":{"title":"onScrollPhaseChange(_:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/caselet\/onscrollphasechange(_:)-k13h","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onScrollPhaseChange","kind":"identifier"},{"kind":"text","text":"(("},{"text":"ScrollPhase","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11ScrollPhaseO"},{"text":", ","kind":"text"},{"text":"ScrollPhase","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11ScrollPhaseO"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI24ScrollPhaseChangeContextV","text":"ScrollPhaseChangeContext","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/onScrollPhaseChange(_:)-k13h","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"kind":"article","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","title":"View Implementations","abstract":[],"type":"topic","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"url":"\/documentation\/composablearchitecture\/caselet","role":"symbol","title":"CaseLet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"}}}