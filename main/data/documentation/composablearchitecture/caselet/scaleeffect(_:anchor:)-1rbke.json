{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.scaleEffect(_:anchor:)"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"scaleEffect","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"scale","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGSize","preciseIdentifier":"c:@S@CGSize"},{"text":", ","kind":"text"},{"text":"anchor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI9UnitPointV","text":"UnitPoint","kind":"typeIdentifier"},{"kind":"text","text":" = .center) -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/scaleEffect(_:anchor:)-1rbke"},"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/scaleeffect(_:anchor:)-1rbke"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"metadata":{"symbolKind":"method","title":"scaleEffect(_:anchor:)","roleHeading":"Instance Method","platforms":[{"deprecated":false,"introducedAt":"13.0","name":"iOS","unavailable":false,"beta":false},{"name":"macOS","beta":false,"unavailable":false,"deprecated":false,"introducedAt":"10.15"},{"beta":false,"name":"tvOS","introducedAt":"13.0","unavailable":false,"deprecated":false},{"name":"watchOS","unavailable":false,"beta":false,"introducedAt":"6.0","deprecated":false}],"modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"extendedModule":"SwiftUICore","role":"symbol","externalID":"s:7SwiftUI4ViewPAAE11scaleEffect_6anchorQrSo6CGSizeV_AA9UnitPointVtF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scaleEffect","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@S@CGSize","text":"CGSize","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"anchor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UnitPoint","preciseIdentifier":"s:7SwiftUI9UnitPointV"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"url":"\/documentation\/composablearchitecture\/caselet","role":"symbol","title":"CaseLet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/scaleEffect(_:anchor:)-1rbke":{"abstract":[],"kind":"symbol","title":"scaleEffect(_:anchor:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scaleEffect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"CGSize","kind":"typeIdentifier","preciseIdentifier":"c:@S@CGSize"},{"text":", ","kind":"text"},{"text":"anchor","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UnitPoint","preciseIdentifier":"s:7SwiftUI9UnitPointV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/scaleeffect(_:anchor:)-1rbke","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/scaleEffect(_:anchor:)-1rbke"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","title":"SwitchStore","kind":"symbol","deprecated":true,"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SwitchStore"}],"abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet"},{"type":"text","text":" views."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"kind":"article","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","title":"View Implementations","abstract":[],"type":"topic","role":"collectionGroup"}}}