{"kind":"symbol","abstract":[{"text":"Turns an effect into one that can be debounced.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debounce","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": some "},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"kind":"text","text":" & "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"kind":"text","text":", "},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"dueTime"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"text":".","kind":"text"},{"text":"SchedulerTimeType","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sx6StrideQa","kind":"typeIdentifier","text":"Stride"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"scheduler"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Combine9SchedulerP0B7OptionsQa","text":"SchedulerOptions","kind":"typeIdentifier"},{"kind":"text","text":"? = nil) -> "},{"preciseIdentifier":"s:22ComposableArchitecture6EffectV","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","text":"Effect"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine9SchedulerP","text":"Scheduler"}]}]},{"parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"text":"The effect’s identifier.","type":"text"}]}]},{"name":"dueTime","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The duration you want to debounce for."}]}]},{"name":"scheduler","content":[{"inlineContent":[{"type":"text","text":"The scheduler you want to deliver the debounced output to."}],"type":"paragraph"}]},{"name":"options","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Scheduler options that customize the effect’s delivery of elements."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"An effect that publishes events only after a specified time elapses."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"To turn an effect into a debounce-able one you must provide an identifier, which is used to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"determine which in-flight effect should be canceled in order to start a new effect. Any"},{"type":"text","text":" "},{"type":"text","text":"hashable value can be used for the identifier, such as a string, but you can add a bit of"},{"type":"text","text":" "},{"type":"text","text":"protection against typos by defining a new type that conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":", such as an enum:"}],"type":"paragraph"},{"type":"codeListing","code":["case let .textChanged(text):","  enum CancelID { case search }","","  return .run { send in","    await send(","      .searchResponse(","        TaskResult { await self.apiClient.search(text) }","      )","    )","  }","  .debounce(id: CancelID.search, for: 0.5, scheduler: self.mainQueue)"],"syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/effect\/debounce(id:for:scheduler:options:)"]}],"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/publisher(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/throttle(id:for:scheduler:latest:)"],"title":"Combine integration","anchor":"Combine-integration","generated":true}],"metadata":{"externalID":"s:22ComposableArchitecture6EffectV8debounce2id3for9scheduler7optionsACyxGqd_0__17SchedulerTimeType_6StrideQYd__qd__0I7OptionsQyd__Sgt7Combine0I0Rd__SHRd_0_s8SendableRd_0_r0_lF","title":"debounce(id:for:scheduler:options:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debounce"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"id"},{"kind":"text","text":": some "},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":" & ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa","text":"SchedulerTimeType"},{"kind":"text","text":"."},{"text":"Stride","preciseIdentifier":"s:Sx6StrideQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheduler"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerOptions","preciseIdentifier":"s:7Combine9SchedulerP0B7OptionsQa"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":">","kind":"text"}],"role":"symbol","extendedModule":"ComposableArchitecture","modules":[{"name":"ComposableArchitecture"}],"symbolKind":"method","roleHeading":"Instance Method"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/debounce(id:for:scheduler:options:)","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/debounce(id:for:scheduler:options:)":{"kind":"symbol","title":"debounce(id:for:scheduler:options:)","url":"\/documentation\/composablearchitecture\/effect\/debounce(id:for:scheduler:options:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"debounce"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"kind":"text","text":": some "},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":" & ","kind":"text"},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SchedulerTimeType","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa"},{"text":".","kind":"text"},{"text":"Stride","preciseIdentifier":"s:Sx6StrideQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"scheduler","kind":"externalParam"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"options"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Combine9SchedulerP0B7OptionsQa","text":"SchedulerOptions","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Effect","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/debounce(id:for:scheduler:options:)","abstract":[{"text":"Turns an effect into one that can be debounced.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/publisher(_:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"publisher","kind":"identifier"},{"text":"(() -> some ","kind":"text"},{"kind":"typeIdentifier","text":"Publisher","preciseIdentifier":"s:7Combine9PublisherP"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5NeverO","text":"Never","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"publisher(_:)","abstract":[{"type":"text","text":"Creates an effect from a Combine publisher."}],"type":"topic","url":"\/documentation\/composablearchitecture\/effect\/publisher(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/publisher(_:)","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","type":"topic","title":"Effect","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/throttle(id:for:scheduler:latest:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"throttle"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"id"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"text":" & ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SchedulerTimeType","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9SchedulerP0B8TimeTypeQa"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sx6StrideQa","kind":"typeIdentifier","text":"Stride"},{"text":", ","kind":"text"},{"text":"scheduler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"latest","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Action"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"throttle(id:for:scheduler:latest:)","abstract":[{"type":"text","text":"Throttles an effect so that it only publishes one output per given interval."}],"type":"topic","url":"\/documentation\/composablearchitecture\/effect\/throttle(id:for:scheduler:latest:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/throttle(id:for:scheduler:latest:)","kind":"symbol","role":"symbol"}}}