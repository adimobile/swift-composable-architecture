{"sections":[],"kind":"symbol","metadata":{"title":"bind(_:to:)","symbolKind":"method","extendedModule":"SwiftUICore","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"bind"},{"kind":"text","text":"<"},{"text":"ModelValue","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"ViewValue","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"ModelValue","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewValue"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"platforms":[{"beta":false,"unavailable":false,"deprecated":false,"name":"iOS","introducedAt":"14.0"},{"name":"macOS","unavailable":false,"beta":false,"introducedAt":"11.0","deprecated":false},{"deprecated":false,"unavailable":false,"beta":false,"name":"tvOS","introducedAt":"14.0"},{"introducedAt":"7.0","deprecated":false,"name":"watchOS","beta":false,"unavailable":false}],"externalID":"s:7SwiftUI4ViewP0A10NavigationE4bind_2toQrqd___qd_0_tAD9_BindableRd__AdGRd_0_SQ5ValueRpd__AHQyd_0_AIRSr0_lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","roleHeading":"Instance Method","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"role":"symbol"},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.bind(_:to:)"},{"type":"text","text":"."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"bind","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ModelValue","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ViewValue"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"modelValue","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ModelValue"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"viewValue"},{"text":": ","kind":"text"},{"text":"ViewValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"ModelValue","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"_Bindable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ViewValue","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"_Bindable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:15SwiftNavigation9_BindableP5ValueQa","text":"Value"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SQ","text":"Equatable"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:15SwiftNavigation9_BindableP5ValueQa","text":"Value"},{"kind":"text","text":" == "},{"text":"ViewValue","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15SwiftNavigation9_BindableP5ValueQa","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":"\n"}]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/bind(_:to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/bind(_:to:)"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"url":"\/documentation\/composablearchitecture\/ifletstore","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IfLetStore"}],"role":"symbol","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","title":"IfLetStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/bind(_:to:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/bind(_:to:)","title":"bind(_:to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"bind","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ModelValue","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ViewValue","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ViewValue"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"url":"\/documentation\/composablearchitecture\/ifletstore\/bind(_:to:)","abstract":[],"kind":"symbol","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"title":"View Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"}}}