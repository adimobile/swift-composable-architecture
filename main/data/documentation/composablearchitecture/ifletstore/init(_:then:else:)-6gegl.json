{"metadata":{"roleHeading":"Initializer","modules":[{"name":"ComposableArchitecture"}],"platforms":[],"role":"symbol","externalID":"s:22ComposableArchitecture10IfLetStoreV_4then4elseACyxq_7SwiftUI19_ConditionalContentVyqd__qd_0_GGAA0E0CyxSgq_G_qd__ALyxq_Gcqd_0_yXEtcAIRs0_AF4ViewRd__AfPRd_0_r0_lufc","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"IfContent","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"then"},{"text":": (","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"else","kind":"externalParam"},{"kind":"text","text":": () -> "},{"text":"ElseContent","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(_:then:else:)"},"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:else:)-6gegl","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Initializes an ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","isActive":true,"type":"reference"},{"text":" view that computes content depending on if a store of optional","type":"text"},{"type":"text","text":" "},{"type":"text","text":"state is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"text":" ","kind":"text"},{"text":"@preconcurrency","kind":"attribute"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"kind":"text","text":"<"},{"text":"IfContent","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"ElseContent"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"store","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">, ","kind":"text"},{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:7SwiftUI11ViewBuilderV","kind":"attribute","text":"ViewBuilder"},{"kind":"text","text":" "},{"kind":"externalParam","text":"then"},{"text":" ","kind":"text"},{"text":"ifContent","kind":"internalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">) -> ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV","text":"ViewBuilder"},{"text":" ","kind":"text"},{"text":"else","kind":"externalParam"},{"kind":"text","text":" "},{"text":"elseContent","kind":"internalParam"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"ElseContent"},{"text":") ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"_ConditionalContent"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"IfContent"},{"kind":"text","text":", "},{"text":"ElseContent","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"IfContent","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ElseContent"},{"kind":"text","text":" : "},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A store of optional state.","type":"text"}]}],"name":"store"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A function that is given a store of non-optional state and returns a view that","type":"text"},{"type":"text","text":" "},{"text":"is visible only when the optional state is non-","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"ifContent"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A view that is only visible when the optional state is ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"elseContent"}],"kind":"parameters"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"]]},"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/init(_:then:else:)-6gegl"],"traits":[{"interfaceLanguage":"swift"}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use 'if let' with a store of observable state, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-IfLetStore-with-if-let]"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/init(_:then:else:)-6gegl":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/init(_:then:else:)-6gegl","title":"init(_:then:else:)","deprecated":true,"abstract":[{"type":"text","text":"Initializes an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"type":"text","text":" view that computes content depending on if a store of optional"},{"type":"text","text":" "},{"type":"text","text":"state is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or non-"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/composablearchitecture\/ifletstore\/init(_:then:else:)-6gegl","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"IfContent","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ElseContent","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"then"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier","text":"Store"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"IfContent","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"else","kind":"externalParam"},{"kind":"text","text":": () -> "},{"text":"ElseContent","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"url":"\/documentation\/composablearchitecture\/ifletstore","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IfLetStore"}],"role":"symbol","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","title":"IfLetStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","url":"\/documentation\/composablearchitecture\/store","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"text":"around to views that need to interact with the application.","type":"text"}]}}}