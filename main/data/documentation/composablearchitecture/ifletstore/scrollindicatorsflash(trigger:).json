{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/scrollindicatorsflash(trigger:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/scrollIndicatorsFlash(trigger:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.scrollIndicatorsFlash(trigger:)"},{"text":".","type":"text"}],"sections":[],"metadata":{"role":"symbol","roleHeading":"Instance Method","title":"scrollIndicatorsFlash(trigger:)","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"platforms":[{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"17.0","name":"iOS"},{"name":"macOS","deprecated":false,"introducedAt":"14.0","beta":false,"unavailable":false},{"introducedAt":"17.0","unavailable":false,"name":"tvOS","beta":false,"deprecated":false},{"deprecated":false,"name":"watchOS","introducedAt":"10.0","unavailable":false,"beta":false}],"extendedModule":"SwiftUICore","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scrollIndicatorsFlash","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"trigger"},{"text":": some ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SQ","text":"Equatable"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"externalID":"s:7SwiftUI4ViewPAAE21scrollIndicatorsFlash7triggerQrqd___tSQRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"scrollIndicatorsFlash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"trigger"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": some "},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/scrollIndicatorsFlash(trigger:)":{"title":"scrollIndicatorsFlash(trigger:)","url":"\/documentation\/composablearchitecture\/ifletstore\/scrollindicatorsflash(trigger:)","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/scrollIndicatorsFlash(trigger:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scrollIndicatorsFlash"},{"kind":"text","text":"("},{"text":"trigger","kind":"externalParam"},{"text":": some ","kind":"text"},{"preciseIdentifier":"s:SQ","kind":"typeIdentifier","text":"Equatable"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"url":"\/documentation\/composablearchitecture\/ifletstore","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IfLetStore"}],"role":"symbol","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","title":"IfLetStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"title":"View Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"title":"SwiftUI Integration","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"url":"\/documentation\/composablearchitecture\/swiftuideprecations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","title":"Deprecations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"}}}