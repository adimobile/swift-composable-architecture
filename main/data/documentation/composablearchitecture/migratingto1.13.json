{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.13","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The Composable Architecture now provides first class tools for building features in UIKit,"},{"type":"text","text":" "},{"text":"including minimal state observation, presentation and stack navigation.","type":"text"}],"metadata":{"title":"Migrating to 1.13","modules":[{"name":"ComposableArchitecture"}],"role":"article","roleHeading":"Article"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4"],"generated":true}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The Composable Architecture is now integrated with the ","type":"text"},{"isActive":true,"type":"reference","identifier":"http:\/\/github.com\/pointfreeco\/swift-navigation"},{"text":" library,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"which brings powerful navigation and observation tools to UIKit. You can model your domains"},{"text":" ","type":"text"},{"type":"text","text":"as concisely as possible, just as you would in SwiftUI, but then implement your view in UIKit"},{"text":" ","type":"text"},{"text":"without losing any power.","type":"text"}]},{"inlineContent":[{"text":"The simplest tool to use is ","type":"text"},{"code":"observe","type":"codeVoice"},{"text":", which allows you to minimally observe changes to state in","type":"text"},{"type":"text","text":" "},{"text":"your feature and update the UI. Typically the best place to do this is in ","type":"text"},{"code":"viewDidLoad","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","code":["let store: StoreOf<Feature>","","func viewDidLoad() {","  super.viewDidLoad()","","  \/\/ ...","","  observe { [weak self] in","    countLabel.text = \"Count: \\(store.count)\"","  }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Only the state accessed in the "},{"type":"codeVoice","code":"observe"},{"text":" trailing closure will be observed. If any other state","type":"text"},{"text":" ","type":"text"},{"text":"changes, the closure will not be invoked and no extra work will be performed.","type":"text"}]},{"inlineContent":[{"text":"The library also provides powerful navigation tools for UIKit. For example, suppose you have a","type":"text"},{"type":"text","text":" "},{"text":"feature that can present a child feature (see the docs on ","type":"text"},{"overridingTitle":"tree-based navigation","overridingTitleInlineContent":[{"text":"tree-based","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"navigation"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","isActive":true,"type":"reference"},{"text":" for more information on these tools):","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@Reducer ","struct Feature {","  @ObservableState","  struct State {","    @Presents var child: ChildFeature.State?","    \/\/ ...","  }","  \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then you can present a view controller when the child state flips to a non-"},{"code":"nil","type":"codeVoice"},{"text":" value by using the","type":"text"},{"text":" ","type":"text"},{"code":"present(item:)","type":"codeVoice"},{"type":"text","text":" API that comes with the library:"}]},{"syntax":"swift","type":"codeListing","code":["@UIBindable var store: StoreOf<Feature>","","func viewDidLoad() {","  super.viewDidLoad()","","  present(item: $store.scope(state: \\.child, action: \\.child)) { store in","    ChildViewController(store: store)","  }","}"]},{"inlineContent":[{"text":"Further, if your feature has a stack of features that can be presented, then you can model your","type":"text"},{"type":"text","text":" "},{"text":"domain like so (see the docs on ","type":"text"},{"type":"reference","isActive":true,"overridingTitle":"stack-based","overridingTitleInlineContent":[{"type":"text","text":"stack-based"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation"},{"type":"text","text":" for more information"},{"type":"text","text":" "},{"text":"on these tools):","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["@Reducer","struct AppFeature {","  struct State {","    var path = StackState<Path.State>()","    \/\/ ...","  }","","  @Reducer","  enum Path {","    case addItem(AddFeature)","    case detailItem(DetailFeature)","    case editItem(EditFeature)","  }","","  \/\/ ...","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"And for the view you can subclass "},{"type":"codeVoice","code":"NavigationStackController"},{"text":" in order to drive navigation from the","type":"text"},{"text":" ","type":"text"},{"text":"stack state:","type":"text"}],"type":"paragraph"},{"code":["class AppController: NavigationStackController {","  private var store: StoreOf<AppFeature>!","","  convenience init(store: StoreOf<AppFeature>) {","    @UIBindable var store = store","","    self.init(path: $store.scope(state: \\.path, action: \\.path)) {","      RootViewController(store: store)","    } destination: { store in ","      switch store.case {","      case .addItem(let store):","        AddViewController(store: store)","      case .detailItem(let store):","        DetailViewController(store: store)","      case .editItem(let store):","        EditViewController(store: store)","      }","    }","","    self.model = model","  }","}"],"type":"codeListing","syntax":"swift"}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/migratingto1.13"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.9":{"url":"\/documentation\/composablearchitecture\/migratingto1.9","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.9","abstract":[{"type":"text","text":"Update your code to make use of the new "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:assert:fileID:file:line:column:)-8877x"},{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"method on ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore"},{"text":" which gives a succinct syntax for sending actions with case key paths, and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)"},{"text":" method for overriding dependencies.","type":"text"}],"kind":"article","title":"Migrating to 1.9","role":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.5":{"url":"\/documentation\/composablearchitecture\/migratingto1.5","role":"article","kind":"article","abstract":[{"text":"Update your code to make use of the new ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255"},{"type":"text","text":" operation on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":" ","type":"text"},{"text":"in order to improve the performance of your features and simplify the usage of navigation APIs.","type":"text"}],"title":"Migrating to 1.5","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.5"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","url":"\/documentation\/composablearchitecture\/teststore","type":"topic","role":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"title":"TestStore","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestStore"}],"abstract":[{"type":"text","text":"A testable runtime for a reducer."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.6":{"url":"\/documentation\/composablearchitecture\/migratingto1.6","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.6","abstract":[{"text":"Update your code to make use of the new","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x"},{"type":"text","text":" method when you need to"},{"type":"text","text":" "},{"text":"assert on the payload inside an action received.","type":"text"}],"kind":"article","title":"Migrating to 1.6","role":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"title":"ForEachStore","url":"\/documentation\/composablearchitecture\/foreachstore","abstract":[{"type":"text","text":"A Composable Architecture-friendly wrapper around "},{"type":"codeVoice","code":"ForEach"},{"text":" that simplifies working with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"collections of state."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"ForEachStore","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ForEachStore","kind":"identifier"}],"deprecated":true},"http://github.com/pointfreeco/swift-navigation":{"title":"Swift Navigation","url":"http:\/\/github.com\/pointfreeco\/swift-navigation","identifier":"http:\/\/github.com\/pointfreeco\/swift-navigation","type":"link","titleInlineContent":[{"type":"text","text":"Swift Navigation"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.7":{"url":"\/documentation\/composablearchitecture\/migratingto1.7","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.7","abstract":[{"type":"text","text":"Update your code to make use of the new observation tools in the library and get rid of legacy"},{"text":" ","type":"text"},{"type":"text","text":"APIs such as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore"},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore"},{"text":", ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","type":"reference"},{"text":", and more.","type":"text"}],"kind":"article","title":"Migrating to 1.7","role":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"title":"Store","navigatorTitle":[{"text":"Store","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","url":"\/documentation\/composablearchitecture\/store","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"type":"text","text":" "},{"text":"around to views that need to interact with the application.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"url":"\/documentation\/composablearchitecture\/ifletstore","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IfLetStore"}],"role":"symbol","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","title":"IfLetStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x":{"url":"\/documentation\/composablearchitecture\/teststore\/receive(_:_:timeout:assert:fileid:file:line:column:)-9jd7x","role":"symbol","kind":"symbol","abstract":[{"text":"Asserts an action was received matching a case path with a specific payload, and asserts how","type":"text"},{"text":" ","type":"text"},{"text":"the state changes.","type":"text"}],"title":"receive(_:_:timeout:assert:fileID:file:line:column:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/receive(_:_:timeout:assert:fileID:file:line:column:)-9jd7x","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"receive","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"_SendableCaseKeyPath","preciseIdentifier":"s:22ComposableArchitecture20_SendableCaseKeyPatha"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":">, ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Duration","preciseIdentifier":"s:s8DurationV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"assert"},{"text":": ((","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"State","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.15":{"url":"\/documentation\/composablearchitecture\/migratingto1.15","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.15","abstract":[{"text":"The library has been completely updated for Swift 6 language mode, and now compiles in strict","type":"text"},{"type":"text","text":" "},{"text":"concurrency with no warnings or errors.","type":"text"}],"kind":"article","title":"Migrating to 1.15","role":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"url":"\/documentation\/composablearchitecture\/treebasednavigation","role":"article","kind":"article","abstract":[{"text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including","type":"text"},{"type":"text","text":" "},{"text":"how to model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"title":"Tree-based navigation","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.4":{"url":"\/documentation\/composablearchitecture\/migratingto1.4","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.4","abstract":[{"text":"Update your code to make use of the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"text":" macro, and learn how to better leverage case key","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"paths in your features."}],"kind":"article","title":"Migrating to 1.4","role":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.12":{"url":"\/documentation\/composablearchitecture\/migratingto1.12","role":"article","kind":"article","abstract":[{"type":"text","text":"Take advantage of custom decoding and encoding logic for the shared file storage persistence"},{"text":" ","type":"text"},{"text":"strategy, as well as beta support for Swift’s native Testing framework.","type":"text"}],"title":"Migrating to 1.12","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.12"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.11":{"url":"\/documentation\/composablearchitecture\/migratingto1.11","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.11","abstract":[{"text":"Update your code to use the new ","type":"text"},{"code":"withLock","type":"codeVoice"},{"type":"text","text":" method for mutating shared state from asynchronous"},{"type":"text","text":" "},{"text":"contexts, rather than mutating the underlying wrapped value directly.","type":"text"}],"kind":"article","title":"Migrating to 1.11","role":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"url":"\/documentation\/composablearchitecture\/stackbasednavigation","role":"article","kind":"article","abstract":[{"text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"model your domains, how to integrate features, how to test your features, and more."}],"title":"Stack-based navigation","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.14":{"url":"\/documentation\/composablearchitecture\/migratingto1.14","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.14","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":" type is now officially ","type":"text"},{"code":"@MainActor","type":"codeVoice"},{"text":" isolated.","type":"text"}],"kind":"article","title":"Migrating to 1.14","role":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/scope(state:action:)-90255":{"url":"\/documentation\/composablearchitecture\/store\/scope(state:action:)-90255","role":"symbol","kind":"symbol","abstract":[{"text":"Scopes the store to one that exposes child state and actions.","type":"text"}],"title":"scope(state:action:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/scope(state:action:)-90255","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ChildState"},{"kind":"text","text":", "},{"text":"ChildAction","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"state","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ChildState"},{"text":">, ","kind":"text"},{"text":"action","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChildAction"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ChildState"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"ChildAction"},{"text":">","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.10":{"url":"\/documentation\/composablearchitecture\/migratingto1.10","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.10","abstract":[{"text":"Update your code to make use of the new state sharing tools in the library, such as the ","type":"text"},{"type":"codeVoice","code":"Shared"},{"type":"text","text":" "},{"type":"text","text":"property wrapper, and the "},{"code":"appStorage","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"fileStorage","type":"codeVoice"},{"type":"text","text":" persistence strategies."}],"kind":"article","title":"Migrating to 1.10","role":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/send(_:assert:fileID:file:line:column:)-8877x":{"url":"\/documentation\/composablearchitecture\/teststore\/send(_:assert:fileid:file:line:column:)-8877x","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Sends an action to the store and asserts when state changes."}],"title":"send(_:assert:fileID:file:line:column:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/send(_:assert:fileID:file:line:column:)-8877x","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"text":"CaseKeyPath","preciseIdentifier":"s:9CasePaths0A7KeyPatha","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"assert"},{"kind":"text","text":": (("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")?, "},{"text":"fileID","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"TestStoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture13TestStoreTaskV"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/dependency(_:)":{"url":"\/documentation\/composablearchitecture\/reducer\/dependency(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/dependency(_:)","abstract":[{"type":"text","text":"Places a value in the reducer’s dependencies."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"_DependencyKeyWritingReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol","title":"dependency(_:)","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"navigatorTitle":[{"text":"WithViewStore","kind":"identifier"}],"abstract":[{"type":"text","text":"A view helper that transforms a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":" into a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"type":"text","text":" so that its state can be observed"},{"text":" ","type":"text"},{"type":"text","text":"by a view builder."}],"title":"WithViewStore","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WithViewStore","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","deprecated":true,"url":"\/documentation\/composablearchitecture\/withviewstore","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.16":{"url":"\/documentation\/composablearchitecture\/migratingto1.16","role":"article","kind":"article","abstract":[{"type":"text","text":"The "},{"code":".appStorage","type":"codeVoice"},{"text":" strategy used with ","type":"text"},{"code":"@Shared","type":"codeVoice"},{"type":"text","text":" now uses key-value observing instead of"},{"text":" ","type":"text"},{"code":"NotificationCenter","type":"codeVoice"},{"type":"text","text":" when possible. Learn how this may affect your code."}],"title":"Migrating to 1.16","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.16"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.8":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.8","type":"topic","kind":"article","role":"article","url":"\/documentation\/composablearchitecture\/migratingto1.8","abstract":[{"text":"Update your code to make use of the new capabilities of the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"type":"text","text":" macro, including automatic"},{"text":" ","type":"text"},{"text":"fulfillment of requirements for destination reducers and path reducers.","type":"text"}],"title":"Migrating to 1.8"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"type":"topic","title":"Reducer()","abstract":[{"text":"Helps implement the conformance to the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true,"type":"reference"},{"type":"text","text":" protocol for a type."}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"},{"text":"()","kind":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","url":"\/documentation\/composablearchitecture\/reducer()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/migrationguides","abstract":[{"type":"text","text":"Learn how to upgrade your application to the newest version of the Composable Architecture."}],"title":"Migration guides"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigratingTo1.17":{"type":"topic","title":"Migrating to 1.17","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"@Shared"},{"text":" property wrapper and related tools have been extracted to their own","type":"text"},{"type":"text","text":" "},{"type":"text","text":"library so that they can be used in non-Composable Architecture applications. This a"},{"text":" ","type":"text"},{"text":"backwards compatible change, but some new deprecations have been introduced.","type":"text"}],"kind":"article","role":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigratingTo1.17","url":"\/documentation\/composablearchitecture\/migratingto1.17"}}}