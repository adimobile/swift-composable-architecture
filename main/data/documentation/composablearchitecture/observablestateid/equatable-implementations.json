{"variants":[{"paths":["\/documentation\/composablearchitecture\/observablestateid\/equatable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"API Collection","role":"collectionGroup","title":"Equatable Implementations"},"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/Equatable-Implementations","interfaceLanguage":"swift"},"kind":"article","topicSections":[{"generated":true,"title":"Operators","anchor":"Operators","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/!=(_:_:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableStateID"}],"title":"ObservableStateID","url":"\/documentation\/composablearchitecture\/observablestateid","abstract":[{"text":"A unique identifier for a observed value.","type":"text"}],"navigatorTitle":[{"text":"ObservableStateID","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"url":"\/documentation\/composablearchitecture\/reducer\/state","title":"State","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}],"abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"required":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"kind":"symbol","title":"ObservableState()","url":"\/documentation\/composablearchitecture\/observablestate()","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","abstract":[{"type":"text","text":"Defines and implements conformance of the Observable protocol."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","type":"topic","title":"Effect","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID/!=(_:_:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"!=(_:_:)","url":"\/documentation\/composablearchitecture\/observablestateid\/!=(_:_:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/!=(_:_:)","type":"topic","abstract":[],"role":"symbol"}}}