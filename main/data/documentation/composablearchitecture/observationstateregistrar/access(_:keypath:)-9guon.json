{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Registers access to a specific property for observation."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"access","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Subject"},{"kind":"text","text":", "},{"text":"Member","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"subject","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyPath"},{"kind":"text","text":": "},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Member","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Observable","preciseIdentifier":"s:11Observation10ObservableP"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance of an observable type."}]}],"name":"subject"},{"content":[{"inlineContent":[{"type":"text","text":"The key path of an observed property."}],"type":"paragraph"}],"name":"keyPath"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/observationstateregistrar\/access(_:keypath:)-9guon"]}],"metadata":{"platforms":[{"deprecated":false,"introducedAt":"17.0","unavailable":false,"beta":false,"name":"iOS"},{"beta":false,"unavailable":false,"deprecated":false,"name":"macOS","introducedAt":"14.0"},{"introducedAt":"17.0","unavailable":false,"deprecated":false,"name":"tvOS","beta":false},{"unavailable":false,"name":"watchOS","deprecated":false,"introducedAt":"10.0","beta":false}],"modules":[{"name":"ComposableArchitecture"}],"extendedModule":"ComposableArchitecture","role":"symbol","externalID":"s:22ComposableArchitecture25ObservationStateRegistrarV6access_7keyPathyx_s03KeyH0Cyxq_Gt0C010ObservableRzr0_lF","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"access"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Subject"},{"text":", ","kind":"text"},{"text":"Member","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyPath"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Member","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"title":"access(_:keyPath:)"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/access(_:keyPath:)-9guon","interfaceLanguage":"swift"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar":{"kind":"symbol","title":"ObservationStateRegistrar","url":"\/documentation\/composablearchitecture\/observationstateregistrar","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ObservationStateRegistrar","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ObservationStateRegistrar"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar","abstract":[{"type":"text","text":"Provides storage for tracking and access to data changes."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"url":"\/documentation\/composablearchitecture\/reducer\/state","title":"State","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}],"abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"required":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"kind":"symbol","title":"ObservableState()","url":"\/documentation\/composablearchitecture\/observablestate()","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","abstract":[{"type":"text","text":"Defines and implements conformance of the Observable protocol."}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","type":"topic","title":"Effect","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationStateRegistrar/access(_:keyPath:)-9guon":{"url":"\/documentation\/composablearchitecture\/observationstateregistrar\/access(_:keypath:)-9guon","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"access"},{"text":"<","kind":"text"},{"text":"Subject","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"Member","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":", "},{"kind":"externalParam","text":"keyPath"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Subject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Member"},{"text":">)","kind":"text"}],"abstract":[{"type":"text","text":"Registers access to a specific property for observation."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationStateRegistrar\/access(_:keyPath:)-9guon","title":"access(_:keyPath:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}]}}}