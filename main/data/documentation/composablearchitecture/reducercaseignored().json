{"abstract":[{"type":"text","text":"Marks the case of an enum reducer as “ignored”, and as such will not compose the case’s domain"},{"type":"text","text":" "},{"type":"text","text":"into the rest of the reducer besides state."}],"metadata":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReducerCaseIgnored","kind":"identifier"},{"kind":"text","text":"()"}],"externalID":"s:22ComposableArchitecture18ReducerCaseIgnoredyycfm","symbolKind":"macro","roleHeading":"Macro","role":"symbol","title":"ReducerCaseIgnored()","modules":[{"name":"ComposableArchitecture"}]},"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(peer, names: named(`_`)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"ReducerCaseIgnored","kind":"identifier"},{"kind":"text","text":"()"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"Apply this macro to cases that do not hold onto reducer features, and instead hold onto plain"},{"text":" ","type":"text"},{"type":"text","text":"data that needs to be passed to a child view."}],"type":"paragraph"},{"syntax":"swift","code":["@Reducer","enum Destination {","  @ReducerCaseIgnored","  case meeting(id: Meeting.ID)","  \/\/ ...","}"],"type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/reducercaseignored()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"seeAlsoSections":[{"anchor":"Enum-reducers","title":"Enum reducers","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer(state:action:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducerState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducerState","url":"\/documentation\/composablearchitecture\/casereducerstate","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseReducerState"}],"title":"CaseReducerState","role":"symbol","abstract":[{"text":"A state type that is associated with a ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","isActive":true},{"type":"text","text":"."}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"CaseReducerState","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer()":{"type":"topic","title":"Reducer()","abstract":[{"text":"Helps implement the conformance to the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","isActive":true,"type":"reference"},{"type":"text","text":" protocol for a type."}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"},{"text":"()","kind":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()","url":"\/documentation\/composablearchitecture\/reducer()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","type":"topic","title":"Effect","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseEphemeral()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseEphemeral()","title":"ReducerCaseEphemeral()","kind":"symbol","url":"\/documentation\/composablearchitecture\/reducercaseephemeral()","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerCaseEphemeral"},{"text":"()","kind":"text"}],"abstract":[{"text":"Marks the case of an enum reducer as holding onto “ephemeral” state.","type":"text"}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerCaseIgnored()":{"kind":"symbol","title":"ReducerCaseIgnored()","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerCaseIgnored()","role":"symbol","abstract":[{"text":"Marks the case of an enum reducer as “ignored”, and as such will not compose the case’s domain","type":"text"},{"text":" ","type":"text"},{"text":"into the rest of the reducer besides state.","type":"text"}],"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReducerCaseIgnored"},{"text":"()","kind":"text"}],"url":"\/documentation\/composablearchitecture\/reducercaseignored()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseReducer":{"url":"\/documentation\/composablearchitecture\/casereducer","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A reducer represented by multiple enum cases."}],"navigatorTitle":[{"kind":"identifier","text":"CaseReducer"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"CaseReducer","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseReducer","type":"topic","title":"CaseReducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer(state:action:)":{"kind":"symbol","title":"Reducer(state:action:)","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer(state:action:)","role":"symbol","abstract":[{"text":"An overload of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer()"},{"type":"text","text":" that takes a description of protocol conformances to synthesize on"},{"text":" ","type":"text"},{"type":"text","text":"the State and Action types"}],"deprecated":true,"fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Reducer"},{"text":"(","kind":"text"},{"text":"state","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture23_SynthesizedConformanceV","kind":"typeIdentifier","text":"_SynthesizedConformance"},{"text":"..., ","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"text":"_SynthesizedConformance","preciseIdentifier":"s:22ComposableArchitecture23_SynthesizedConformanceV","kind":"typeIdentifier"},{"kind":"text","text":"...)"}],"url":"\/documentation\/composablearchitecture\/reducer(state:action:)"}}}