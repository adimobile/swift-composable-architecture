{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/publisher"},"abstract":[{"text":"A publisher that emits when state changes.","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/store\/publisher"]}],"metadata":{"title":"publisher","roleHeading":"Instance Property","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"publisher"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture14StorePublisherV","text":"StorePublisher"},{"kind":"text","text":"<"},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","symbolKind":"property","externalID":"s:22ComposableArchitecture5StoreC9publisherAA0C9PublisherVyxGvp"},"kind":"symbol","seeAlsoSections":[{"anchor":"Combine-integration","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/ifLet(then:else:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/publisher"],"title":"Combine integration","generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"publisher","kind":"identifier"},{"kind":"text","text":": "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","preciseIdentifier":"s:22ComposableArchitecture14StorePublisherV","text":"StorePublisher","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This publisher supports dynamic member lookup so that you can pluck out a specific field in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the state:"}]},{"type":"codeListing","code":["store.publisher.alert","  .sink { ... }"],"syntax":"swift"}],"kind":"content"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StorePublisher":{"type":"topic","url":"\/documentation\/composablearchitecture\/storepublisher","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","role":"symbol","title":"StorePublisher","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StorePublisher"}],"navigatorTitle":[{"kind":"identifier","text":"StorePublisher"}],"kind":"symbol","abstract":[{"text":"A publisher of store state.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UIKit":{"role":"collectionGroup","title":"UIKit Integration","type":"topic","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a UIKit application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit","kind":"article","url":"\/documentation\/composablearchitecture\/uikit"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/publisher":{"abstract":[{"type":"text","text":"A publisher that emits when state changes."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/publisher","title":"publisher","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"publisher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StorePublisher","preciseIdentifier":"s:22ComposableArchitecture14StorePublisherV"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/composablearchitecture\/store\/publisher","role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/ifLet(then:else:)":{"role":"symbol","title":"ifLet(then:else:)","deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"ifLet","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"else"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> any "},{"preciseIdentifier":"s:7Combine11CancellableP","text":"Cancellable","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Calls one of two closures depending on whether a storeâ€™s optional state is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" or not, and"},{"text":" ","type":"text"},{"text":"whenever this condition changes for as long as the cancellable lives.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/ifLet(then:else:)","kind":"symbol","url":"\/documentation\/composablearchitecture\/store\/iflet(then:else:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/publisher":{"abstract":[{"text":"A publisher that emits when state changes.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/publisher","title":"publisher","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"publisher","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture14StorePublisherV","text":"StorePublisher","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewState"},{"text":">","kind":"text"}],"url":"\/documentation\/composablearchitecture\/viewstore\/publisher","role":"symbol","kind":"symbol","deprecated":true}}}