{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/allCasePaths-swift.type.property"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.type.property"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/CasePathable-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/CasePathable-Implementations"]]},"metadata":{"roleHeading":"Type Property","conformance":{"constraints":[{"code":"Success","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"externalID":"s:22ComposableArchitecture10TaskResultO12allCasePathsAC03AllfG0Vyx_GvpZ","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allCasePaths"},{"text":": ","kind":"text"},{"text":"TaskResult","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">."},{"preciseIdentifier":"s:22ComposableArchitecture10TaskResultO12AllCasePathsV","text":"AllCasePaths","kind":"typeIdentifier"}],"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"property","extendedModule":"ComposableArchitecture","title":"allCasePaths","role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"allCasePaths","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture10TaskResultO","text":"TaskResult","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"text":">.","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct","kind":"typeIdentifier","text":"AllCasePaths","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO12AllCasePathsV"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"CasePathable.allCasePaths"},{"text":".","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"kind":"symbol","type":"topic","title":"Effect","url":"\/documentation\/composablearchitecture\/effect","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"url":"\/documentation\/composablearchitecture\/reducer","title":"Reducer","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/AllCasePaths-swift.struct":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/AllCasePaths-swift.struct","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AllCasePaths","kind":"identifier"}],"title":"TaskResult.AllCasePaths","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Success","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"navigatorTitle":[{"text":"AllCasePaths","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.struct","kind":"symbol","abstract":[],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/allCasePaths-swift.type.property":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"allCasePaths","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture10TaskResultO","kind":"typeIdentifier","text":"TaskResult"},{"kind":"text","text":"<"},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":">."},{"text":"AllCasePaths","preciseIdentifier":"s:22ComposableArchitecture10TaskResultO12AllCasePathsV","kind":"typeIdentifier"}],"url":"\/documentation\/composablearchitecture\/taskresult\/allcasepaths-swift.type.property","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/allCasePaths-swift.type.property","abstract":[],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Success","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","title":"allCasePaths"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"text":" ","type":"text"},{"text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"url":"\/documentation\/composablearchitecture","role":"collection","kind":"symbol","type":"topic","title":"ComposableArchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult":{"deprecated":true,"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TaskResult","kind":"identifier"}],"title":"TaskResult","abstract":[{"type":"text","text":"A value that represents either a success or a failure. This type differs from Swiftâ€™s "},{"code":"Result","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"type in that it uses only one generic for the success case, leaving the failure case as an"},{"type":"text","text":" "},{"type":"text","text":"untyped "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult","url":"\/documentation\/composablearchitecture\/taskresult","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TaskResult"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TaskResult/CasePathable-Implementations":{"kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TaskResult\/CasePathable-Implementations","title":"CasePathable Implementations","abstract":[],"url":"\/documentation\/composablearchitecture\/taskresult\/casepathable-implementations"}}}